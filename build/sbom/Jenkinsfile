pipeline {
  agent any

  options {
    buildDiscarder(logRotator(numToKeepStr: '30', artifactNumToKeepStr: '20'))
  }

  triggers {
    cron '@midnight'
  }

  stages {
    stage('build') {
      steps {
        script {
          if (isReleasingBranch()) {
            docker.build('node', '-f build/Dockerfile.node .').inside {
              sh 'npm run update:axonivy:next && npm i --force'
              sh 'npm install'
              sh 'npm run sbom'
              def version = sh (script: "node -p \"require('./package.json').version\"", returnStdout: true)
              uploadBOM(projectName: 'neo', projectVersion: version, bomFile: 'bom.json')
              sh 'npm run sbom --omit dev'
            }
            docker.build('maven-build', '-f build/Dockerfile.maven .').inside {
              maven cmd: '-f build/sbom/pom.xml clean deploy'
            }
          }
        }
      }
    }
  }
}
